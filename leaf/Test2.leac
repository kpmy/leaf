MODULE TestStd
VAR
	i INTEGER
	s STRING
BEGIN
	i:=-1
	WHILE i<10 DO
		INC(x<- i)
	ELSIF i<31 DO
		INC(x<- i, n: 2)
	ELSIF i=32 DO
		DEC(x<-i)
	END
	s:="a"
	s[0] :=  \CAP s[0]
END TestStd.

MODULE TestStd2
	CONST
		INTEGER
	CONST s = "Hello, World!"
	VAR i INTEGER
	VAR x STRING
	VAR b BOOLEAN
	VAR t ATOM
BEGIN
	t := \TYPEOF i
	b:=t = INTEGER
	i:=0
	WHILE i < \LEN s DO
		x := x + \CAP s[i]
		INC(x<-i)
	END
	b:=\ODD i
END TestStd2.

MODULE TestAny
	VAR
		a, z ANY
		x INTEGER
		t TRILEAN
		b BOOLEAN
BEGIN
	a:=UNDEF
	t := a IS INTEGER
	z:=a
	x:=0
	a:=z
	a:=x
	z:=x
	b := (a = z)
	b := (a # z)
	b := (a # UNDEF)
	b := (a = UNDEF)
	t := a IS INTEGER
	t := a IS BOOLEAN
	CHOOSE a
		AS REAL: a := a + 0.5
		OR INTEGER: a := a + 55
		OR UNDEF: a := t
	END;
	z := 0.4
	CHOOSE z
		AS REAL: z := z + 0.5
		OR INTEGER: z := z + 55
		OR UNDEF: z := t
	END;
	a := UNDEF
	CHOOSE a
		AS REAL: a := a + 0.5
		OR INTEGER: a := a + 55
		OR UNDEF: a := t
	END;
END TestAny.


MODULE TestList
	CONST s = "HELLO"
	CONST li = [123, 124124, "LITERAL"]
	VAR	l, l2 LIST
	VAR i, len INTEGER
	VAR c CHAR


	PROCEDURE Item
		VAR l+ LIST
		VAR idx- INTEGER
		VAR res+ CHAR
		VAR o ANY
		PRE (\LEN l) > 0
		PRE idx < \LEN l
	BEGIN
		o := l[idx]
		CHOOSE o AS CHAR: res:=o OR UNDEF: res:=0U END
	END Item

BEGIN
	RESIZE(list <- l, n: 5)
	len := \LEN l
	WHILE i<len DO
		l[i] := s[i]
		INC(x <- i)
	END
	i:=1
	WHILE i<len DO
		l[i]:=UNDEF
		INC(x <- i)
	END
	Item(l <- l, idx: 0, res <- c)
	Item(l <- l, idx: 1, res <- c)
	l2 := li
END TestList.

MODULE TestSet
	CONST und = UNDEF
	CONST initial = {3, "a", 0.5}
	VAR s SET; ok BOOLEAN; i INTEGER;val LIST
BEGIN
	s := {11, 45, 33} + initial
	s := {7, 16, 4, "a", 3} - initial
	s := {343, 342, 3} * initial
	s := {45454554, 0.444, 0.555, 3} / initial
	ok:= (s = s)
	ok := (s # s)
	ok := 3 IN s
	INCL(set<-s, x: 42)
	EXCL(set<-s, x: 3)
	WHILE i<32 DO
		INCL(set<-s, x: i)
		INC(x<-i)
	END;
	val := \VALUES s
	s:=~s
END TestSet.

MODULE TestMap
	CONST
		type; value;unknown
		ml = <<type: 3.14, value: "OBERON FOR THE GOOD!">>
		l = [123, 124124, "LITERAL"]
	VAR m MAP; x ANY
		k, v LIST
BEGIN
	m["memory"] := 1945
	m[type] := 42
	m[value] := "Hello, World!"
	x:=m[value]
	m := ml
	m[value] := l
	m.value := l
	m."memory":=1812
	k := \KEYS m
	v := \VALUES m
	x := m.unknown
END TestMap.

MODULE TestPtr
	VAR
		p0, p1 PTR
		x INTEGER
		b BOOLEAN
		t TRILEAN
		a ANY
BEGIN
	b:=p0 # NIL
	b:=p1 = p1
	NEW(p-> p0)
	x := 103
	p0$ := x
	b:=p0 = p1
	p1 := p0
	b:=p1=p0
	a:=p1$
	t := p0 IS INTEGER
END TestPtr.
